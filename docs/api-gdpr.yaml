paths:
  GDPRRequests:
    post:
      operationId: RegisterGDPRRequest
      tags:
        - GDPR
      summary: Register a GDPR request
      description: Registers a GDPR request to meet the GDPRâ€™s requirements. The request is normally processed within 48 hours. Once processed the user_id and nick will be replaced with fizz_anonymized. Linked message data can also be set to null if the optional flag is set. Client should be able to handle these changes.
      parameters:
        - name: requesterId
          description: Id of user creating the GDPR request.
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CreateGDPRRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGDPRRequestResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: './defs/common/ErrorReply.yaml'
        '500':
          description: The server encountered an unexpected error
          content:
            application/json:
              schema:
                $ref: './defs/common/ErrorReply.yaml'
      security:
      - digest: []
      
    get:
      operationId: QueryGDPRRequests
      tags:
        - GDPR
      summary: Query GDPR requests
      description: Retrieves a list of GDPR requests based on query.
      parameters:
        - name: request_id
          description: Id of generated GDPR request.
          in: query
          schema:
            type: string
        - name: user_id
          description: Id of the user in GDPR request.
          in: query
          schema:
            type: string
        - name: status
          description: The status of GDPR request.
          in: query
          schema:
            $ref: './defs/gdpr/GDPRRequestStatus.yaml'
        - name: requested_by
          description: Fetch requests generated by the specified userId.
          in: query
          schema:
            type: string
            format: int64
        - name: cancelled_by
          description: Fetch requests cancelled by the specified userId.
          in: query
          schema:
            type: string
            format: int64
        - name: start
          description: Fetch requests generated after the specified unix timestamp.
          in: query
          schema:
            type: number
            format: int64
        - name: end
          description: Fetch requests generated before the specified unix timestamp.
          in: query
          required: false
          schema:
            type: number
            format: int64
        - name: cursor
          description: The cursor of last fetched requests page.
          in: query
          required: false
          schema:
            type: integer
        - name: page_size
          description: The number of requests to query.
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryGDPRRequestResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: './defs/common/ErrorReply.yaml'
        '500':
          description: The server encountered an unexpected error
          content:
            application/json:
              schema:
                $ref: './defs/common/ErrorReply.yaml'
      security:
      - digest: []

  GDPRRequest:
    delete:
      operationId: CancelGDPRRequest
      tags:
        - GDPR
      summary: Cancel a GDPR request
      description: Cancels the registration of a GDPR request.
      parameters:
        - name: requestId
          description: The GDPR request's Id.
          in: path
          required: true
          schema:
            type: string
        - name: requesterId
          description: Id of user cancelling the GDPR request.
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: './defs/common/ErrorReply.yaml'
        '409':
          description: The request conflicts with the current server state, e.g. the request does not exist etc
          content:
            application/json:
              schema:
                $ref: './defs/common/ErrorReply.yaml'
        '500':
          description: The server encountered an unexpected error
          content:
            application/json:
              schema:
                $ref: './defs/common/ErrorReply.yaml'
      security:
      - digest: []

components:
  schemas:
    CreateGDPRRequest:
      type: object
      required:
      - user_id
      properties:
        user_id:
          $ref: './defs/common/UserId.yaml'
        message_clear_data:
          type: boolean
          default: false
          description: If set true, the <code>data</code> field in message will be set to null.

    CreateGDPRRequestResponse:
      type: object
      properties:
        request_id:
          type: string
          description: Id of generated GDPR request.

    QueryGDPRRequestResponse:
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: './defs/gdpr/GDPRRequest.yaml'
        total_requests:
          type: integer
          description: The total number of requests found matching search criteria.
      